import re
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import FormatStrFormatter

# ============================================================
#                       DISCLAIMER: 
# The following code was generated by AI and executed in Colab
# ============================================================

def plot_histograms(filename, save=False):
    with open(filename, 'r', encoding='utf-8') as f:
        text = f.read()

    blocks = re.split(r'Metric\s+when\s+having\s+(\d+)\s+services:', text, flags=re.IGNORECASE)

    for i in range(1, len(blocks), 2):
        services = int(blocks[i])
        section = blocks[i + 1]

        matches = re.findall(r'\[\s*([0-9.]+)\s*,\s*([0-9.]+)\s*\[\s*([a-zA-Zµu]+)?\s*:\s*(\d+)', section)

        uppers = np.array([float(b) for _, b, _, _ in matches], dtype=float)
        counts = np.array([int(c) for _, _, _, c in matches], dtype=int)
        unit = next((u for *_, u, _ in matches if u), "").replace("µ", "u")

        order = np.argsort(uppers)
        uppers = uppers[order]
        counts = counts[order]

        left_edges = np.empty_like(uppers)
        left_edges[0] = 0.0
        left_edges[1:] = uppers[:-1]
        widths = uppers - left_edges 

        plt.figure(figsize=(12, 5))
        bars = plt.bar(left_edges, counts, width=widths, align='edge',
                       color='skyblue', edgecolor='black', linewidth=0.7)

        y_off = max(1, counts.max() * 0.01)
        for le, w, y in zip(left_edges, widths, counts):
            if y > 0:
                plt.text(le + w/2, y + y_off, str(y),
                         ha='center', va='bottom', fontsize=8)

        plt.xlim(0, float(uppers.max()))
        plt.xticks(uppers, [f"{u:.3f}" for u in uppers], rotation=90, fontsize=8)
        plt.gca().xaxis.set_major_formatter(FormatStrFormatter('%.3f'))

        plt.xlabel(f"Tempo ({unit})" if unit else "Tempo")
        plt.ylabel("Frequência")
        plt.title(f"Delay Histogram — {services} serviço(s)")
        plt.grid(axis='y', linestyle='--', alpha=0.5)
        plt.tight_layout()

        plt.show()